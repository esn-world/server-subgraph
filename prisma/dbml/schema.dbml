//// ------------------------------------------------------
//// THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
//// ------------------------------------------------------

Table Tenant {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  name String [not null]
  shortName String [unique, not null]
  aboutPage String [not null, default: '']
  faqPage String
  imprintPage String [not null, default: '']
  privacyPolicyPage String [not null, default: '']
  tacPage String
  organizers EventOrganizer [not null]
  eventTemplates EventTemplate [not null]
  eventTemplateCategories EventTemplateCategory [not null]
  products Product [not null]
  transactions Transaction [not null]
  users UsersOfTenants [not null]

  Note: 'One Tenant of the app, most likely an ESN section'
}

Table User {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  authId String [unique, not null, note: 'Id from auth0 for this user']
  firstName String [not null]
  lastName String [not null]
  email String [not null]
  communicationEmail String
  birthdate DateTime
  email_verified Boolean [not null]
  picture String [not null]
  calendarToken String [unique, not null]
  iban String
  paypal String
  phone String
  esnCardOverride Boolean [not null, default: false]
  university String
  partyAnimals Boolean [not null, default: false]
  enrolmentStatus EnrollmentStatus [not null, default: 'NONE']
  eventRegistrations EventRegistration [not null]
  photos PhotoShare [not null]
  productImages ProductImage [not null]
  purchases Purchase [not null]
  receipts Receipt [not null]
  createdTransactions Transaction [not null]
  transactions Transaction [not null]
  createdEvents TumiEvent [not null]
  tenants UsersOfTenants [not null]
  bio String
  country String
  homeUniversity String
  instagram String
  position String
  studyProgram String

  Note: 'One User of the app'
}

Table StripeUserData {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  usersOfTenantsUserId String [not null]
  usersOfTenantsTenantId String [not null]
  customerId String [not null]
  paymentMethodId String
  userOfTenant UsersOfTenants [not null]

  indexes {
    (usersOfTenantsUserId, usersOfTenantsTenantId) [unique]
  }
}

Table ShoppingCart {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  usersOfTenantsTenantId String [not null]
  usersOfTenantsUserId String [not null]
  userOfTenant UsersOfTenants [not null]
  items LineItem [not null]

  indexes {
    (usersOfTenantsUserId, usersOfTenantsTenantId) [unique]
  }
}

Table StripePayment {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  amount Decimal [not null]
  checkoutSession String [unique, not null]
  events Json [not null, note: 'Array of events with their timestamps']
  feeAmount Decimal
  netAmount Decimal
  paymentIntent String [unique]
  paymentMethod String
  paymentMethodType String
  refundedAmount Decimal [default: 0]
  status String [not null]
  shipping Json
  transactions Transaction [not null]
  purchase Purchase
}

Table Transaction {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  subject String [not null]
  isMembershipFee Boolean [not null, default: false]
  userId String
  tenantId String [not null]
  comment String
  creatorId String [not null]
  type TransactionType [not null]
  direction TransactionDirection [not null]
  status TransactionStatus [not null, default: 'PENDING']
  amount Decimal [not null]
  onSendingBalance Boolean [not null, default: false]
  onReceivingBalance Boolean [not null, default: false]
  receipts Receipt [not null]
  createdBy User [not null]
  tenant Tenant [not null]
  user User
  eventRegistration EventRegistration
  eventRegistrationId String
  purchaseId String
  purchase Purchase
  stripePaymentId String
  stripePayment StripePayment
}

Table UsersOfTenants {
  createdAt DateTime [default: `now()`, not null]
  userId String [not null]
  tenantId String [not null]
  role Role [not null, default: 'USER']
  status MembershipStatus [not null, default: 'NONE']
  tenant Tenant [not null]
  user User [not null]
  cart ShoppingCart
  stripeData StripeUserData

  indexes {
    (userId, tenantId) [pk]
  }
}

Table EventOrganizer {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  tenantId String [not null]
  name String [not null]
  text String [not null]
  link String
  tenant Tenant [not null]
  events TumiEvent [not null]
}

Table EventTemplate {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  title String [not null]
  icon String [not null]
  description String [not null]
  comment String [not null]
  location String [not null]
  duration Decimal [not null]
  participantText String [not null]
  organizerText String [not null]
  finances Json [not null]
  tenantId String [not null]
  categoryId String
  coordinates Json
  insuranceDescription String [not null, default: '']
  shouldBeReportedToInsurance Boolean [not null, default: true]
  googlePlaceId String
  googlePlaceUrl String
  category EventTemplateCategory
  tenant Tenant [not null]
  eventInstances TumiEvent [not null]

  Note: 'Template that holds all information for an event that is needed to run it'
}

Table EventTemplateCategory {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  name String [not null]
  icon String [not null]
  tenantId String [not null]
  tenant Tenant [not null]
  templates EventTemplate [not null]

  Note: 'Category to keep an overview of event templates'
}

Table TumiEvent {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  title String [not null]
  icon String [not null]
  start DateTime [not null]
  end DateTime [not null]
  description String [not null]
  location String [not null]
  participantText String [not null]
  organizerText String [not null]
  participantLimit Int [not null, default: 0]
  organizerLimit Int [not null, default: 0]
  publicationState PublicationState [not null, default: 'DRAFT']
  participantSignup MembershipStatus[] [not null]
  organizerSignup MembershipStatus[] [not null]
  eventOrganizerId String [not null]
  creatorId String [not null]
  eventTemplateId String [not null]
  registrationLink String
  registrationMode RegistrationMode [not null]
  coordinates Json
  prices Json
  registrationStart DateTime [default: `now()`, not null]
  organizerRegistrationStart DateTime [default: `now()`, not null]
  insuranceDescription String [not null, default: '']
  shouldBeReportedToInsurance Boolean [not null, default: true]
  disableDeregistration Boolean [not null, default: false]
  excludeFromStatistics Boolean [not null, default: false]
  excludeFromRatings Boolean [not null, default: false]
  googlePlaceId String
  googlePlaceUrl String
  createdBy User [not null]
  organizer EventOrganizer [not null]
  eventTemplate EventTemplate [not null]
  costItems CostItem [not null]
  registrations EventRegistration [not null]
  eventRegistrationCodes EventRegistrationCode [not null]
  submissionItems EventSubmissionItem [not null]
  photoShares PhotoShare [not null]

  Note: 'Actual instande of an TumiEventbased on a template'
}

Table Product {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  title String [not null]
  description String [not null]
  availability MembershipStatus[] [not null]
  tenantId String [not null]
  isESNcard Boolean [not null, default: false]
  prices Json [not null]
  leadImageId String
  publicationState PublicationState [not null, default: 'DRAFT']
  needsShippingAddress Boolean [not null, default: false]
  isActive Boolean [not null, default: true]
  tenant Tenant [not null]
  submissionItems EventSubmissionItem [not null]
  lineItems LineItem [not null]
  images ProductImage [not null]
}

Table ProductImage {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  container String [not null]
  creatorId String [not null]
  originalBlob String [not null]
  previewBlob String
  type String [not null]
  productId String [not null]
  creator User [not null]
  product Product [not null]
}

Table Purchase {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  status PurchaseStatus [not null, default: 'PENDING']
  userId String [not null]
  paymentId String [unique]
  cancellationReason String
  payment StripePayment
  transactions Transaction [not null]
  user User [not null]
  items LineItem [not null]
}

Table LineItem {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  cancellationReason String
  cost Decimal [not null]
  pickupTime DateTime
  productId String [not null]
  purchaseId String
  quantity Int [not null, default: 1]
  shoppingCartId String
  product Product [not null]
  purchase Purchase
  cart ShoppingCart
  submissions EventSubmission [not null]
}

Table CostItem {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  eventId String [not null]
  name String [not null]
  actualAmount Decimal
  amount Decimal [not null]
  calculationInfo String [not null]
  completed Boolean [not null, default: false]
  details String
  onInvoice Boolean [not null]
  notSubsidized Boolean [not null, default: false]
  complete Boolean [not null, default: false]
  event TumiEvent [not null]
  receipts Receipt [not null]
}

Table Receipt {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  userId String [not null]
  costItemId String [not null]
  amount Decimal [not null]
  blob String [not null]
  container String [not null]
  md5 String
  preview String
  type String
  confirmed Boolean [not null, default: false]
  costItem CostItem [not null]
  user User [not null]
  transactions Transaction [not null]
}

Table PhotoShare {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  eventId String [not null]
  container String [not null]
  creatorId String [not null]
  originalBlob String [not null]
  previewBlob String
  cols Int [not null, default: 2]
  rows Int [not null, default: 1]
  type String [not null]
  creator User [not null]
  event TumiEvent [not null]
}

Table EventRegistration {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  type RegistrationType [not null, default: 'PARTICIPANT']
  userId String [not null]
  eventId String [not null]
  checkInTime DateTime
  manualCheckin Boolean [not null, default: false]
  cancellationReason String
  status RegistrationStatus [not null, default: 'SUCCESSFUL']
  registrationCodeId String
  rating Int
  anonymousRating Boolean [not null, default: true]
  userComment String
  event TumiEvent [not null]
  eventRegistrationCode EventRegistrationCode
  transactions Transaction [not null]
  user User [not null]
  submissions EventSubmission [not null]
}

Table EventRegistrationCode {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  createdById String [not null]
  registrationToRemoveId String [unique]
  registrationCreatedId String
  isPublic Boolean [not null, default: false]
  eventId String [not null]
  status RegistrationStatus [not null, default: 'PENDING']
  sepaAllowed Boolean [not null, default: false]
  targetEvent TumiEvent [not null]
  connectedRegistrations EventRegistration [not null]
}

Table EventSubmissionItem {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  eventId String
  required Boolean [not null]
  submissionTime SubmissionTime [not null]
  instruction String [not null]
  name String [not null]
  type SubmissionItemType [not null]
  data Json
  productId String
  event TumiEvent
  product Product
  submissions EventSubmission [not null]
}

Table EventSubmission {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  submissionItemId String [not null]
  data Json [not null]
  eventRegistrationId String
  lineItemId String
  registration EventRegistration
  lineItem LineItem
  submissionItem EventSubmissionItem [not null]
}

Table ActivityLog {
  id String [pk]
  createdAt DateTime [default: `now()`, not null]
  message String [not null]
  data Json
  oldData Json
  involvedUser String
  severity LogSeverity [not null]
  category String [not null, default: 'general']
}

Table ReceiptToTransaction {
  receiptsId String [ref: > Receipt.id]
  transactionsId String [ref: > Transaction.id]
}

Enum Role {
  USER
  ADMIN
}

Enum EnrollmentStatus {
  LOCAL
  EXCHANGE
  INTERNATIONAL
  NONE
  OTHER
}

Enum MembershipStatus {
  NONE
  TRIAL
  FULL
  SPONSOR
  ALUMNI
}

Enum PublicationState {
  DRAFT
  APPROVAL
  PUBLIC
  ORGANIZERS
}

Enum SubmissionItemType {
  FILE
  NUMBER
  TEXT
  DATE
  RATING
  LONGTEXT
  BOOLEAN
  SELECT
  CONFIRM
}

Enum SubmissionTime {
  REGISTRATION
  BEFORE
  DURING
  AFTER
}

Enum RegistrationType {
  ORGANIZER
  PARTICIPANT
  CALENDAR
}

Enum RegistrationStatus {
  PENDING
  SUCCESSFUL
  CANCELLED
}

Enum RegistrationCodeStatus {
  OPEN
  PENDING
  SUCCESSFUL
  CANCELLED
}

Enum PurchaseStatus {
  PENDING
  PAID
  SENT
  CANCELLED
}

Enum RegistrationMode {
  STRIPE
  ONLINE
  EXTERNAL
}

Enum LogSeverity {
  SILLY
  DEBUG
  INFO
  WARNING
  ERROR
}

Enum TransactionType {
  CASH
  STRIPE
  TRANSFER
  PAYPAL
}

Enum TransactionDirection {
  TUMI_TO_EXTERNAL
  EXTERNAL_TO_TUMI
  TUMI_TO_USER
  USER_TO_TUMI
  USER_TO_EXTERNAL
  EXTERNAL_TO_USER
  USER_TO_USER
}

Enum TransactionStatus {
  PENDING
  CONFIRMED
  CANCELLED
}

Ref: StripeUserData.(usersOfTenantsUserId, usersOfTenantsTenantId) - UsersOfTenants.(userId, tenantId)

Ref: ShoppingCart.(usersOfTenantsUserId, usersOfTenantsTenantId) - UsersOfTenants.(userId, tenantId)

Ref: Transaction.creatorId > User.id

Ref: Transaction.tenantId > Tenant.id

Ref: Transaction.userId > User.id

Ref: Transaction.eventRegistrationId > EventRegistration.id

Ref: Transaction.purchaseId > Purchase.id

Ref: Transaction.stripePaymentId > StripePayment.id

Ref: UsersOfTenants.tenantId > Tenant.id

Ref: UsersOfTenants.userId > User.id

Ref: EventOrganizer.tenantId > Tenant.id

Ref: EventTemplate.categoryId > EventTemplateCategory.id

Ref: EventTemplate.tenantId > Tenant.id

Ref: EventTemplateCategory.tenantId > Tenant.id

Ref: TumiEvent.creatorId > User.id

Ref: TumiEvent.eventOrganizerId > EventOrganizer.id

Ref: TumiEvent.eventTemplateId > EventTemplate.id

Ref: Product.tenantId > Tenant.id

Ref: ProductImage.creatorId > User.id

Ref: ProductImage.productId > Product.id

Ref: Purchase.paymentId - StripePayment.id

Ref: Purchase.userId > User.id

Ref: LineItem.productId > Product.id

Ref: LineItem.purchaseId > Purchase.id

Ref: LineItem.shoppingCartId > ShoppingCart.id

Ref: CostItem.eventId > TumiEvent.id

Ref: Receipt.costItemId > CostItem.id

Ref: Receipt.userId > User.id

Ref: PhotoShare.creatorId > User.id

Ref: PhotoShare.eventId > TumiEvent.id

Ref: EventRegistration.eventId > TumiEvent.id

Ref: EventRegistration.registrationCodeId > EventRegistrationCode.id

Ref: EventRegistration.userId > User.id

Ref: EventRegistrationCode.eventId > TumiEvent.id [delete: Cascade]

Ref: EventSubmissionItem.eventId > TumiEvent.id

Ref: EventSubmissionItem.productId > Product.id

Ref: EventSubmission.eventRegistrationId > EventRegistration.id [delete: Cascade]

Ref: EventSubmission.lineItemId > LineItem.id

Ref: EventSubmission.submissionItemId > EventSubmissionItem.id